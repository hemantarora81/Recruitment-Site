{"version":3,"file":"static/js/841.187cc520.chunk.js","mappings":"sIAEA,MA8BA,EA9BcA,IAAwB,IAAvB,QAAEC,EAAO,KAAEC,GAAMF,EAC9B,IAAKC,EAAS,OAAO,KAOrB,OACEE,EAAAA,EAAAA,MAAA,OACEC,UAAW,oDAPI,CACjBC,QAAS,yGACTC,MAAO,gGAKqEJ,KAC1EK,KAAK,QAAOC,SAAA,EAEZC,EAAAA,EAAAA,KAAA,OACEL,UAAU,oCACV,cAAY,OACZM,MAAM,6BACNC,KAAK,eACLC,QAAQ,YAAWJ,UAEnBC,EAAAA,EAAAA,KAAA,QAAMI,EAAE,oLAEVJ,EAAAA,EAAAA,KAAA,QAAML,UAAU,UAASI,SAAC,UAC1BL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEL,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaI,SAAA,CAAC,KAAGN,EAAiB,YAATA,EAAqB,WAAa,SAAY,MAAU,IAAED,OAEjG,C,8FC4JV,MAwOA,EAxOsBa,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KACpCK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAMC,IAAWR,EAAAA,EAAAA,UAAS,CAC/BS,SAAU,GACVC,aAAc,GACdC,MAAO,GACPC,SAAU,KA+BNC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OACb,iBAATF,GACEC,EAAME,OAAS,IAErBV,EAAQ,IACHD,EACH,CAACO,EAAEG,OAAOF,MAAOD,EAAEG,OAAOD,OAC1B,EAsFJ,OACE1B,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uBAAsBI,UACnCL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUI,SAAA,EACvBL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAML,UAAU,QAAOI,SAAEgB,EAAU,QAAU,aAC7Cf,EAAAA,EAAAA,KAAA,QAAML,UAAU,WAAUI,UAAGgB,GAAW,2CACvCP,IAAgBR,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CAACrC,QAASgB,EAAcf,KAAMoB,KAErDnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBI,SAAA,EAC3BgB,IACArB,EAAAA,EAAAA,MAAAoC,EAAAA,SAAA,CAAA/B,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEP,KAAK,OACLE,UAAU,QACVoC,YAAY,aACZN,KAAK,WACLC,MAAOT,EAAKE,SACZa,SAAUT,EACVU,UAAQ,KAEVjC,EAAAA,EAAAA,KAAA,SACEP,KAAK,SACLE,UAAU,QACVoC,YAAY,iBACZN,KAAK,eACLC,MAAOT,EAAKG,aACZY,SAAUT,EACVU,UAAQ,QAIdjC,EAAAA,EAAAA,KAAA,SACEP,KAAK,QACLE,UAAU,QACVoC,YAAY,SACZN,KAAK,QACLC,MAAOT,EAAKI,MACZW,SAAUT,EACVU,UAAQ,KAEVjC,EAAAA,EAAAA,KAAA,SACEP,KAAK,WACLE,UAAU,QACVoC,YAAY,YACZN,KAAK,WACLC,MAAOT,EAAKK,SACZU,SAAUT,EACVU,UAAQ,OAIXtB,GACCjB,EAAAA,EAAAA,MAAA,UAAQC,UAAU,oGAAmGI,SAAA,EACnHL,EAAAA,EAAAA,MAAA,OACEC,UAAU,uCACVM,MAAM,6BACNC,KAAK,OACLC,QAAQ,YAAWJ,SAAA,EAEnBC,EAAAA,EAAAA,KAAA,UACEL,UAAU,aACVuC,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,OAAO,eACPC,YAAY,OAEdtC,EAAAA,EAAAA,KAAA,QACEL,UAAU,aACVO,KAAK,eACLE,EAAE,8BAGLW,EAAU,aAAe,0BAG5Bf,EAAAA,EAAAA,KAAA,UACEuC,QAAUf,GAhKDgB,WACnBhB,EAAEiB,iBACF,MAAMC,EAAM3B,EAAW,gDAA6C,mDAE9D4B,EAAW5B,EACb,CAAEM,MAAOJ,EAAKI,MAAOC,SAAUL,EAAKK,UACpC,CACEH,SAAUF,EAAKE,SACfC,aAAcH,EAAKG,aACnBC,MAAOJ,EAAKI,MACZC,SAAUL,EAAKK,UAIrB,GApDkBD,EAoDFJ,EAAKI,OAnDV,wJACDuB,KAAKvB,EAAMwB,eAqDnB,OAFApC,EAAgB,4CAChBK,EAAa,SAtDGO,MAUGC,EALIF,EASFD,EA4CvB,IAAKJ,EAAS,CACZ,MA7CqBI,EA6CAF,EAAKE,UA3CZ2B,OAAOlB,OAAS,GADH,gBAC6BgB,KAAKzB,IA8C3D,OAFAV,EAAgB,wCAChBK,EAAa,SAIf,GA5DuBM,EA4DAH,EAAKG,cA3DnB,cACDwB,KAAKxB,GA6DX,OAFAX,EAAgB,qDAChBK,EAAa,SAIf,GA7DmBQ,EA6DAL,EAAKK,UA5Df,iEACDsB,KAAKtB,GA8DX,OAFAb,EAAgB,oJAChBK,EAAa,QAGjB,CAEAF,GAAa,GACbH,EAAgB,IAChB,IACE,MAAMsC,QAAiBC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,OACRP,IAAKA,EACLzB,KAAM0B,EACNO,QAAS,CACP,eAAgB,sBAQN,IAADC,EAAAC,EAJb,GAAwB,MAApBL,EAASM,OACXzC,GAAa,GACbH,EAAgBsC,EAAS9B,KAAKqC,MAAQvC,EAAU,qBAAuB,iCACvED,EAAa,WACVC,IACDwC,aAAaC,QAAQ,QAAiB,OAART,QAAQ,IAARA,GAAc,QAANI,EAARJ,EAAU9B,YAAI,IAAAkC,OAAN,EAARA,EAAgBM,OAC9CF,aAAaC,QAAQ,UAAmB,OAART,QAAQ,IAARA,GAAc,QAANK,EAARL,EAAU9B,YAAI,IAAAmC,OAAN,EAARA,EAAgBM,KAAKC,KACrDJ,aAAaC,QAAQ,WAAW,IAGlCtC,EAAQ,CACNC,SAAU,GACVC,aAAc,GACdC,MAAO,GACPC,SAAU,KAETP,EAEDT,EAAS,kBAETU,GAAW,GACXP,EAAgB,iCAGtB,CAAE,MAAOZ,GAAQ,IAAD+D,EAAAC,EACdpD,GAA8B,QAAdmD,EAAA/D,EAAMkD,gBAAQ,IAAAa,GAAM,QAANC,EAAdD,EAAgB3C,YAAI,IAAA4C,OAAN,EAAdA,EAAsBP,MAAO,2CAC7CxC,EAAa,SACbF,GAAa,EACf,GAgF0BkD,CAAatC,GAC7B7B,UAAU,sEAAqEI,SAE9EgB,EAAU,QAAU,gBAI3Bf,EAAAA,EAAAA,KAAA,OAAKL,UAAU,eAAcI,UAC3BL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CACGgB,EAAU,yBAA2B,mBAAoB,KAC1Df,EAAAA,EAAAA,KAAA,KAAGuC,QAASA,IAAMvB,GAAYD,GAAUpB,UAAU,iBAAgBI,SAC/DgB,EAAU,UAAY,oBAK3B,C","sources":["Common/Alerts/Alert.jsx","components/HR/HRSignupLogin.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Alert = ({ message, type }) => {\r\n  if (!message) return null;\r\n\r\n  const alertTypes = {\r\n    success: \"text-green-800 border-green-300 bg-green-50 dark:bg-gray-800 dark:text-green-400 dark:border-green-800\",\r\n    error: \"text-red-800 border-red-300 bg-red-50 dark:bg-gray-800 dark:text-red-400 dark:border-red-800\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`flex items-center p-4  text-sm border rounded-lg ${alertTypes[type]}`}\r\n      role=\"alert\"\r\n    >\r\n      <svg\r\n        className=\"flex-shrink-0 inline w-4 h-4 mr-3\"\r\n        aria-hidden=\"true\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"currentColor\"\r\n        viewBox=\"0 0 20 20\"\r\n      >\r\n        <path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\" />\r\n      </svg>\r\n      <span className=\"sr-only\">Info</span>\r\n      <div>\r\n        <span className=\"font-medium\">  {type ? (type === \"success\" ? \"Success!\" : \"Error!\") : \"\"}</span> {message}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","// import React, { useState } from 'react';\r\n// import axios from \"axios\";\r\n// import {useNavigate} from 'react-router-dom'\r\n// import './HRLogin.css';\r\n// import Alert from '../../Common/Alerts/Alert';\r\n\r\n// const HRSignupLogin = () => {\r\n//   const navigate = useNavigate()\r\n//   const [alertMessage, setAlertMessage] = useState(\"\");\r\n//   const [isLoading,setisLoading] = useState(false)\r\n//   const [alertType, setAlertType] = useState(\"\");\r\n//   const [isLogin, setIsLogin] = useState(false);\r\n//   const [data, setData] = useState({\r\n//     fullName: '',\r\n//     mobileNumber: '',\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n\r\n//   // Set for Valid Email Value\r\n//   const validEmail = (email) => {\r\n//     const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n//     return re.test(email.toLowerCase());\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setData({\r\n//       ...data,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async(e) => {\r\n//     e.preventDefault();\r\n//     const url = isLogin  ? `${process.env.REACT_APP_BASE_URL}/login`  : `${process.env.REACT_APP_BASE_URL}/register`;\r\n  \r\n//   const formData = isLogin \r\n//     ? { email: data.email, password: data.password } \r\n//     : {\r\n//         fullName: data.fullName,\r\n//         mobileNumber: data.mobileNumber,\r\n//         email: data.email,\r\n//         password: data.password,\r\n//       };\r\n//     if (!validEmail(data.email)) {\r\n//       setAlertMessage(\"Please enter a valid email address.\");\r\n//       setAlertType(\"error\");\r\n//       return;\r\n//     }\r\n//     setisLoading(true);\r\n// // console.log(data,\"\")\r\n//    await axios({\r\n//       method: \"POST\",\r\n//       url: url,\r\n//       data: formData,\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\", \r\n//       },\r\n//     })\r\n//       .then((response) => {\r\n//         // console.log(response,\"response\")\r\n//         if (response.status === 200) {\r\n//           // console.log(response.data.msg,\"response.data.msg\")\r\n//           setisLoading(false);\r\n//           setAlertMessage(response.data.msg?response.data.msg:\"Login Successfully\");\r\n//           window.scrollTo(0,0)\r\n//           localStorage.setItem(\"token\",response.data.token);\r\n//           localStorage.setItem(\"user_id\",response.data.user._id);\r\n//           localStorage.setItem(\"isLogin\",true);\r\n//           setAlertType(\"success\");\r\n//           setData({\r\n//             fullName: '',\r\n//             mobileNumber: '',\r\n//             email: '',\r\n//             password: ''\r\n//           });\r\n//            navigate('/hr-dashboard') \r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error, \"error\");\r\n//         setAlertMessage(error.response.data.msg);\r\n//         setAlertType(\"error\");\r\n//         setisLoading(false);\r\n//       });\r\n//   };\r\n//   return (\r\n//     <div className='container-custom p-3'>\r\n//       <div className=\"form-box\">\r\n//         <div className=\"form\">\r\n//           <span className=\"title\">{isLogin ? 'Login' : 'Sign up'}</span>\r\n//           <span className=\"subtitle\">{!isLogin && 'Create a free account with your email.'}</span>\r\n//          {alertMessage && <Alert message={alertMessage} type={alertType} />}\r\n\r\n//           <div className=\"form-container\">\r\n//             {!isLogin && (\r\n//               <>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   className=\"input\"\r\n//                   placeholder=\"Full Name*\"\r\n//                   name=\"fullName\"\r\n//                   value={data.fullName}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                 />\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   className=\"input\"\r\n//                   placeholder=\"Mobile Number\"\r\n//                   name=\"mobileNumber\"\r\n//                   value={data.mobileNumber}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                 />\r\n//               </>\r\n//             )}\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"input\"\r\n//               placeholder=\"Email*\"\r\n//               name=\"email\"\r\n//               value={data.email}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"input\"\r\n//               placeholder=\"Password*\"\r\n//               name=\"password\"\r\n//               value={data.password}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n//           {isLoading?\r\n//          <button className=\"flex justify-center gap-1 text-sm w-full place-items-center  rounded-lg p-6 overflow-x-hidden\">\r\n//           <svg\r\n//         className=\"animate-spin h-5 w-5 text-white mr-3\"\r\n//         xmlns=\"http://www.w3.org/2000/svg\"\r\n//         fill=\"none\"\r\n//         viewBox=\"0 0 24 24\"\r\n//       >\r\n//         <circle\r\n//           className=\"opacity-25\"\r\n//           cx=\"12\"\r\n//           cy=\"12\"\r\n//           r=\"10\"\r\n//           stroke=\"currentColor\"\r\n//           strokeWidth=\"4\"\r\n//         ></circle>\r\n//         <path\r\n//           className=\"opacity-75\"\r\n//           fill=\"currentColor\"\r\n//           d=\"M4 12a8 8 0 018-8v8H4z\"\r\n//         ></path>\r\n//       </svg>\r\n//          {isLogin? \"Loading...\" : \"Creating Account...\"}\r\n//        </button>\r\n//         :\r\n//           <button  onClick={(e)=>handleSubmit(e)}>{isLogin ? 'Login' : 'Sign up'}</button>\r\n// }\r\n//         </div>\r\n//         <div className=\"form-section\">\r\n//           <p>\r\n//             {isLogin ? \"Don't have an account?\" : 'Have an account?'}{' '}\r\n//             <b onClick={() => setIsLogin(!isLogin)} className='cursor-pointer'>\r\n//               {isLogin ? 'Sign Up' : 'Log in'}\r\n//             </b>\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HRSignupLogin;\r\nimport React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport './HRLogin.css';\r\nimport Alert from '../../Common/Alerts/Alert';\r\n\r\nconst HRSignupLogin = () => {\r\n  const navigate = useNavigate();\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [alertType, setAlertType] = useState(\"\");\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [data, setData] = useState({\r\n    fullName: '',\r\n    mobileNumber: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  // Validations\r\n  const validEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email.toLowerCase());\r\n  };\r\n\r\n  const validMobileNumber = (mobileNumber) => {\r\n    const re = /^[0-9]{10}$/;\r\n    return re.test(mobileNumber);\r\n  };\r\n\r\n  const validPassword = (password) => {\r\n    const re = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n    return re.test(password);\r\n  };\r\n  const isValidFullName = (fullName) => {\r\n    const alphaWithSpacesRegex = /^[A-Za-z\\s]+$/;\r\n    return fullName.trim().length > 0 && alphaWithSpacesRegex.test(fullName);\r\n  };\r\n  \r\n  // React.useEffect(() => {\r\n  //   if (isLogin) {\r\n  //     setAlertMessage('');\r\n  //     setAlertType('');\r\n  //   }\r\n  // }, [isLogin]);\r\n\r\n  // Input Values\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"mobileNumber\") {\r\n      if (value.length > 10) return; // Prevent further input if more than 10 digits\r\n    }\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n    const url = isLogin  ? `${process.env.REACT_APP_BASE_URL}/login`  : `${process.env.REACT_APP_BASE_URL}/register`;\r\n\r\n    const formData = isLogin \r\n      ? { email: data.email, password: data.password } \r\n      : {\r\n          fullName: data.fullName,\r\n          mobileNumber: data.mobileNumber,\r\n          email: data.email,\r\n          password: data.password,\r\n        };\r\n\r\n    // Validation Checks\r\n    if (!validEmail(data.email)) {\r\n      setAlertMessage(\"Please enter a valid email address.\");\r\n      setAlertType(\"error\");\r\n      return;\r\n    }\r\n\r\n    if (!isLogin) {\r\n      if (!isValidFullName(data.fullName) ) {\r\n        setAlertMessage(\"Please enter a valid full name.\");\r\n        setAlertType(\"error\");\r\n        return;\r\n      }\r\n      \r\n      if (!validMobileNumber(data.mobileNumber)) {\r\n        setAlertMessage(\"Please enter a valid 10-digit mobile number.\");\r\n        setAlertType(\"error\");\r\n        return;\r\n      }\r\n\r\n      if (!validPassword(data.password)) {\r\n        setAlertMessage(\"Password must be at least 8 characters long, and include one uppercase letter, one lowercase letter, one number, and one special character.\");\r\n        setAlertType(\"error\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    setisLoading(true);\r\n    setAlertMessage('');\r\n    try {\r\n      const response = await axios({\r\n        method: \"POST\",\r\n        url: url,\r\n        data: formData,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\", \r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setisLoading(false);\r\n        setAlertMessage(response.data.msg || (isLogin ? \"Login Successfully\" : \"Account Created Successfully\"));\r\n        setAlertType(\"success\");\r\n        if(isLogin){\r\n          localStorage.setItem(\"token\", response?.data?.token);\r\n          localStorage.setItem(\"user_id\", response?.data?.user._id);\r\n          localStorage.setItem(\"isLogin\", true);\r\n        }\r\n\r\n        setData({\r\n          fullName: '',\r\n          mobileNumber: '',\r\n          email: '',\r\n          password: ''\r\n        });\r\n        if(isLogin){\r\n\r\n          navigate('/hr-dashboard');\r\n        }else{\r\n          setIsLogin(true);\r\n          setAlertMessage('Please Login with credentials');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setAlertMessage(error.response?.data?.msg || \"Something went wrong, please try again.\");\r\n      setAlertType(\"error\");\r\n      setisLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container-custom p-3'>\r\n      <div className=\"form-box\">\r\n        <div className=\"form\">\r\n          <span className=\"title\">{isLogin ? 'Login' : 'Sign up'}</span>\r\n          <span className=\"subtitle\">{!isLogin && 'Create a free account with your email.'}</span>\r\n          {alertMessage && <Alert message={alertMessage} type={alertType} />}\r\n\r\n          <div className=\"form-container\">\r\n            {!isLogin && (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  placeholder=\"Full Name*\"\r\n                  name=\"fullName\"\r\n                  value={data.fullName}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"input\"\r\n                  placeholder=\"Mobile Number*\"\r\n                  name=\"mobileNumber\"\r\n                  value={data.mobileNumber}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n            <input\r\n              type=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email*\"\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password*\"\r\n              name=\"password\"\r\n              value={data.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {isLoading ? (\r\n            <button className=\"flex justify-center gap-1 text-sm w-full place-items-center bg-blue-500 text-white rounded-lg p-2\">\r\n              <svg\r\n                className=\"animate-spin h-5 w-5 text-white mr-3\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <circle\r\n                  className=\"opacity-25\"\r\n                  cx=\"12\"\r\n                  cy=\"12\"\r\n                  r=\"10\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"4\"\r\n                ></circle>\r\n                <path\r\n                  className=\"opacity-75\"\r\n                  fill=\"currentColor\"\r\n                  d=\"M4 12a8 8 0 018-8v8H4z\"\r\n                ></path>\r\n              </svg>\r\n              {isLogin ? \"Loading...\" : \"Creating Account...\"}\r\n            </button>\r\n          ) : (\r\n            <button \r\n              onClick={(e) => handleSubmit(e)}\r\n              className=\"w-full p-2 mt-3 bg-blue-500 hover:bg-blue-600 text-white rounded-md\"\r\n            >\r\n              {isLogin ? 'Login' : 'Sign up'}\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className=\"form-section\">\r\n          <p>\r\n            {isLogin ? \"Don't have an account?\" : 'Have an account?'}{' '}\r\n            <b onClick={() => setIsLogin(!isLogin)} className='cursor-pointer'>\r\n              {isLogin ? 'Sign Up' : 'Log in'}\r\n            </b>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HRSignupLogin;\r\n"],"names":["_ref","message","type","_jsxs","className","success","error","role","children","_jsx","xmlns","fill","viewBox","d","HRSignupLogin","navigate","useNavigate","alertMessage","setAlertMessage","useState","isLoading","setisLoading","alertType","setAlertType","isLogin","setIsLogin","data","setData","fullName","mobileNumber","email","password","handleChange","e","name","value","target","length","Alert","_Fragment","placeholder","onChange","required","cx","cy","r","stroke","strokeWidth","onClick","async","preventDefault","url","formData","test","toLowerCase","trim","response","axios","method","headers","_response$data","_response$data2","status","msg","localStorage","setItem","token","user","_id","_error$response","_error$response$data","handleSubmit"],"sourceRoot":""}
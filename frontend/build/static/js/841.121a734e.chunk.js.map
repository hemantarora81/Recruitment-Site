{"version":3,"file":"static/js/841.121a734e.chunk.js","mappings":"qJAEA,MA+FA,EA/FsBA,KACpB,MAAOC,EAAQC,IAAcC,EAAAA,EAAAA,WAAS,IAC/BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CACnCG,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,KAkDZ,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvBX,GACHY,EAAAA,EAAAA,MAAA,QAAMF,UAAU,OAAMC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOC,SAAC,aACxBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUC,SAAC,4CAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAOI,KAAK,OAAOH,UAAU,QAAQI,YAAY,eACjDL,EAAAA,EAAAA,KAAA,SAAOI,KAAK,SAASH,UAAU,QAAQI,YAAY,mBACnDL,EAAAA,EAAAA,KAAA,SAAOI,KAAK,QAAQH,UAAU,QAAQI,YAAY,WAClDL,EAAAA,EAAAA,KAAA,SAAOI,KAAK,WAAWH,UAAU,QAAQI,YAAY,iBAEvDL,EAAAA,EAAAA,KAAA,UAASM,QAASA,IAAKC,MAAM,kBAAmBL,SAAC,gBAGrDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,OAAMC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOC,SAAC,WACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SAAOI,KAAK,QAAQH,UAAU,QAAQI,YAAY,WAClDL,EAAAA,EAAAA,KAAA,SAAOI,KAAK,WAAWH,UAAU,QAAQI,YAAY,iBAEvDL,EAAAA,EAAAA,KAAA,UAAQM,QAASA,IAAKC,MAAM,iBAAkBL,SAAC,cAGnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SAC1BX,GACDY,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAI,2BAAuBF,EAAAA,EAAAA,KAAA,KAAGM,QAASA,IAAId,GAAYD,GAAUU,UAAU,iBAAgBC,SAAC,YAAW,QAErGC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,qBAAiBF,EAAAA,EAAAA,KAAA,KAAGM,QAASA,IAAId,GAAYD,GAAUU,UAAU,iBAAgBC,SAAC,WAAU,aAMvG,C","sources":["components/HR/HRSignupLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './HRLogin.css'\r\nconst HRSignupLogin = () => {\r\n  const [isLogin,setIsLogin] = useState(false);\r\n  const [errors, setErrors] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const validateForm = (event) => {\r\n    event.preventDefault();\r\n\r\n    const form = event.target;\r\n    let isValid = true;\r\n    const newErrors = { firstname: '', lastname: '', email: '', password: '' };\r\n\r\n    // Check for Required Firstname\r\n    if (form.firstname.value.trim() === \"\") {\r\n      newErrors.firstname = \"First name is required!\";\r\n      isValid = false;\r\n    }\r\n\r\n    // Check for Required Lastname\r\n    if (form.lastname.value.trim() === \"\") {\r\n      newErrors.lastname = \"Last name is required!\";\r\n      isValid = false;\r\n    }\r\n\r\n    // Check for Required Email\r\n    if (form.email.value.trim() === \"\") {\r\n      newErrors.email = \"Email is required!\";\r\n      isValid = false;\r\n    } else if (!validEmail(form.email.value.trim())) {\r\n      newErrors.email = \"Email is not valid!\";\r\n      isValid = false;\r\n    }\r\n\r\n    // Check for Required Password\r\n    if (form.password.value.trim() === \"\") {\r\n      newErrors.password = \"Password is required!\";\r\n      isValid = false;\r\n    } else if (form.password.value.length < 9) {\r\n      newErrors.password = \"Password must be at least 9 characters!\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  // Set for Valid Email Value\r\n  const validEmail = (email) => {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <div className='container-custom p-3'>\r\n              <div className=\"form-box \">\r\n                {isLogin?\r\n              <form className=\"form\">\r\n                  <span className=\"title\">Sign up</span>\r\n                  <span className=\"subtitle\">Create a free account with your email.</span>\r\n                  <div className=\"form-container\">\r\n                    <input type=\"text\" className=\"input\" placeholder=\"Full Name\"/>\r\n                    <input type=\"number\" className=\"input\" placeholder=\"Mobile Number\"/>\r\n                    <input type=\"email\" className=\"input\" placeholder=\"Email\"/>\r\n                    <input type=\"password\" className=\"input\" placeholder=\"Password\"/>\r\n                  </div>\r\n                  <button  onClick={()=>(alert(\"Signup Clicked\"))}>Sign up</button>\r\n              </form>\r\n              :\r\n              <form className=\"form\">\r\n                  <span className=\"title\">Login</span>\r\n                  <div className=\"form-container\">\r\n                    <input type=\"email\" className=\"input\" placeholder=\"Email\"/>\r\n                    <input type=\"password\" className=\"input\" placeholder=\"Password\"/>\r\n                  </div>\r\n                  <button onClick={()=>(alert(\"Login Clicked\"))}>Login</button>\r\n              </form>\r\n                }\r\n              <div className=\"form-section\">\r\n                {isLogin?\r\n                <p >Don't have an account? <b onClick={()=>setIsLogin(!isLogin)} className='cursor-pointer'>Sign Up</b> </p>\r\n                  :\r\n                  <p>Have an account? <b onClick={()=>setIsLogin(!isLogin)} className='cursor-pointer'>Log in</b> </p>\r\n\r\n                }\r\n              </div>\r\n              </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HRSignupLogin;\r\n"],"names":["HRSignupLogin","isLogin","setIsLogin","useState","errors","setErrors","firstname","lastname","email","password","_jsx","className","children","_jsxs","type","placeholder","onClick","alert"],"sourceRoot":""}